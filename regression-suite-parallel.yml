name: "Run Regression Tests"
run-name: "Run Automation Tests for ${{ inputs.environment }}"

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: "Choose the environment"
        required: true
      company-name:
        description: "Enter company name"
        type: string
        required: false
      admin-company-name:
        description: "Enter admin company name"
        type: string
        required: false  
      project-name:
        type: choice
        description: "Choose the project"
        options:
          - cfa
          - cost_advisor
          - perspectives

env:
  BASE_URL: ${{ vars.BASE_URL }}
  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
  USER_NAME: ${{ secrets.USER_NAME }}
  USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
  COMPANY_NAME: ${{ inputs.company-name || vars.COMPANY_NAME }}
  ADMIN_COMPANY_NAME: ${{ inputs.admin-company-name || vars.ADMIN_COMPANY_NAME }}
  TERM: xterm

jobs:
  discover-specs:
    name: Discover Specs
    runs-on: self-hosted-artemis-linux
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Find all spec files
        id: find-specs
        run: |
          SPECS=$(find cypress/e2e -name "*.cy.ts" | jq -R -s -c 'split("\n")[:-1]')
          echo "SPECS=$SPECS" >> $GITHUB_OUTPUT
          
      - name: Set matrix for parallel jobs
        id: set-matrix
        run: |
          TOTAL_NODES=12
          SPECS=${{ steps.find-specs.outputs.SPECS }}
          MATRIX=$(node -e "
            const specs = $SPECS;
            const totalNodes = $TOTAL_NODES;
            const matrix = {include: []};
            for (let i = 0; i < totalNodes; i++) {
              matrix.include.push({
                node: (i + 1).toString(),
                specs: specs.filter((_, index) => index % totalNodes === i)
              });
            }
            console.log(JSON.stringify(matrix));
          ")
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  run:
    name: Parallel Cypress Tests on ${{ inputs.project-name }}
    needs: discover-specs
    runs-on: self-hosted-artemis-linux
    environment: ${{ inputs.environment }}
    strategy:
      matrix: ${{ fromJson(needs.discover-specs.outputs.matrix) }}
      fail-fast: false

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache NPM
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.cache/Cypress
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run Cypress Tests (Node-${{ matrix.node }})
        uses: artemishealth/dionysus/.github/actions/run-sample-job@main
        with:
          project-name: "${{ inputs.project-name }}"
          continue_on_failure: "true"
          node-id: "${{ matrix.node }}"
          specs: ${{ toJson(matrix.specs) }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          BASE_URL: ${{ vars.BASE_URL }}
          USER_NAME: ${{ secrets.USER_NAME }}
          USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
          COMPANY_NAME: ${{ env.COMPANY_NAME }}